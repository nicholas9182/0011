V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
rett <- as.tibble(data.frame(Angle_pred=Angle, Energy_pred=V))
return(rett)
}
data <- rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest(coefs = c(C0,C1,C2,C3,C4,C5)) %>%
#  mutate(coefs = map(coefs,list)) %>%
mutate( predict = map( coefs , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
data <- rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest(coefs = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( coefs , ~ RB_tibble(  Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
data <- rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
RB_tibble <- function(coefs,Angle){
C0 <- coefs[1]
C1 <- coefs[2]
C2 <- coefs[3]
C3 <- coefs[4]
C4 <- coefs[5]
C5 <- coefs[6]
V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
rett <- as.tibble(data.frame(Angle_pred=Angle, Energy_pred=V))
return(rett)
}
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)
RB_tibble <- function(coefs,Angle){
C0 <- coefs[1] %>% print()
C1 <- coefs[2] %>% print()
C2 <- coefs[3] %>% print()
C3 <- coefs[4] %>% print()
C4 <- coefs[5] %>% print()
C5 <- coefs[6] %>% print()
V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
rett <- as.tibble(data.frame(Angle_pred=Angle, Energy_pred=V))
return(rett)
}
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
RB_tibble <- function(coefs,Angle){
C0 <- as.numeric(coefs[1])
C1 <- as.numeric(coefs[2])
C2 <- as.numeric(coefs[3])
C3 <- as.numeric(coefs[4])
C4 <- as.numeric(coefs[5])
C5 <- as.numeric(coefs[6])
V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
rett <- as.tibble(data.frame(Angle_pred=Angle, Energy_pred=V))
return(rett)
}
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,5) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line() +
facet_grid(col = vars(Oligomer))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line(size=2) +
facet_grid(col = vars(Oligomer))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line(size=2) +
facet_grid(rows = vars(Oligomer))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict,data)
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)
View(data[[3]][[1]])
View(data[[3]][[1]])
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>% unnest(data)
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>% unnest(data) %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line(size=2) +
facet_grid(Oligomer~Method) +
geom_point(aes(x=Angle,  y = Energy))
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>% unnest(data) %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line(size=1.5) +
facet_grid(Oligomer~Method) +
geom_point(aes(x=Angle,  y = Energy),size=2)
ggsave("Figures/Dihedral_Potentials.pdf", width=24, height=18)
RB <- function(C0,C1,C2,C3,C4,C5,Angle){
V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
return(V)
}
RB_tibble <- function(coefs,Angle){
C0 <- as.numeric(coefs[1])
C1 <- as.numeric(coefs[2])
C2 <- as.numeric(coefs[3])
C3 <- as.numeric(coefs[4])
C4 <- as.numeric(coefs[5])
C5 <- as.numeric(coefs[6])
V <-    C0*cos(Angle*0.0174533)^0 +
-C1*cos(Angle*0.0174533)^1 +
C2*cos(Angle*0.0174533)^2 +
-C3*cos(Angle*0.0174533)^3 +
C4*cos(Angle*0.0174533)^4 +
-C5*cos(Angle*0.0174533)^5
rett <- as.tibble(data.frame(Angle_pred=Angle, Energy_pred=V))
return(rett)
}
a <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pBTTT_thiophene_thienothiophene/QCC_B3LYP/pBTTT.txt") %>% mutate(Oligomer="pBTTT",Method="B3lyp/6-311+g(d,p)")
e <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pBTTT_thiophene_thienothiophene/QCC_wb97xd/pBTTT.txt") %>% mutate(Oligomer="pBTTT",Method="wb97xd/6-311+g(d,p)")
f <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pBTTT_thiophene_thienothiophene/QCC_HF/pBTTT.txt") %>% mutate(Oligomer="pBTTT",Method="HF/aug-cc-pvdz")
h <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pBTTT_thiophene_thienothiophene/QCC_MP2/pBTTT.txt") %>% mutate(Oligomer="pBTTT",Method="MP2/aug-cc-pvdz")
b <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/gpBTTT_thiophene_thienothiophene/QCC_B3LYP/pBTTT.txt") %>% mutate(Oligomer="gpBTTT",Method="B3lyp/6-311+g(d,p)")
c <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/gpBTTT_thiophene_thienothiophene/QCC_wb97xd/pBTTT.txt") %>% mutate(Oligomer="gpBTTT",Method="wb97xd/6-311+g(d,p)")
g <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/gpBTTT_thiophene_thienothiophene/QCC_HF/pBTTT.txt") %>% mutate(Oligomer="gpBTTT",Method="HF/aug-cc-pvdz")
i <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/gpBTTT_thiophene_thienothiophene/QCC_MP2/pBTTT.txt") %>% mutate(Oligomer="gpBTTT",Method="MP2/aug-cc-pvdz")
d <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pgT2_TT_thiophene_thienothiophene/QCC_B3LYP/pg2T_TT.txt") %>% mutate(Oligomer="pgT2_TT",Method="B3lyp/6-311+g(d,p)")
j <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pgT2_TT_thiophene_thienothiophene/QCC_WB97XD/pg2T_TT.txt") %>% mutate(Oligomer="pgT2_TT",Method="wb97xd/6-311+g(d,p)")
k <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pgT2_TT_thiophene_thienothiophene/QCC_HF/pg2T_TT.txt") %>% mutate(Oligomer="pgT2_TT",Method="HF/aug-cc-pvdz")
l <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pgT2_TT_thiophene_thienothiophene/QCC_MP2/pg2T_TT.txt") %>% mutate(Oligomer="pgT2_TT",Method="MP2/aug-cc-pvdz")
m <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pBTTT_thiophene_thienothiophene/QCC_CCSD/pBTTT.txt") %>% mutate(Oligomer="pBTTT") %>%
rename( CCSD_SCF = V3 , CCSD = V5 , CCSDT = V7 ) %>%
select(V1, CCSD_SCF, CCSD, CCSDT, Oligomer) %>%
pivot_longer(names_to = "Method", values_to = "V2", cols = c(CCSD_SCF,CCSD,CCSDT)) %>%
drop_na() %>% print()
n <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/gpBTTT_thiophene_thienothiophene/QCC_CCSD/gpBTTT.txt") %>% mutate(Oligomer="gpBTTT") %>%
rename( CCSD_SCF = V3 , CCSD = V5 , CCSDT = V7 ) %>%
select(V1, CCSD_SCF, CCSD, CCSDT, Oligomer) %>%
pivot_longer(names_to = "Method", values_to = "V2", cols = c(CCSD_SCF,CCSD,CCSDT)) %>%
drop_na() %>% print()
o <- read.table("~/Dropbox/OBT/0011/Parameter_Optimisations/pgT2_TT_thiophene_thienothiophene/QCC_CCSD/pgT2_TT.txt") %>% mutate(Oligomer="pgT2_TT") %>%
rename( CCSD_SCF = V3 , CCSD = V5 , CCSDT = V7 ) %>%
select(V1, CCSD_SCF, CCSD, CCSDT, Oligomer) %>%
pivot_longer(names_to = "Method", values_to = "V2", cols = c(CCSD_SCF,CCSD,CCSDT)) %>%
drop_na() %>% print()
rbind(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) %>%
rename(Angle = V1, Energy = V2) %>%
group_by(Oligomer, Method) %>%
mutate(Energy = (Energy - min(Energy))*27211.3825435 ) %>%
ungroup() %>%
mutate( ang_group = abs(Angle) ) %>%
group_by(Oligomer, ang_group, Method) %>%
mutate(Energy = min(Energy)) %>%
ungroup() %>% select(-c(ang_group)) %>%
nest(data = c(Angle,Energy)) %>%
mutate(
fit = map( data , ~ nls( .x$Energy ~ RB(C0,C1,C2,C3,C4,C5,Angle),
start=list(C0=0,C1=0,C2=0,C3=0,C4=0,C5=0),
data= .x) ) ,
coefs = map( fit , tidy ) ) %>%
unnest(coefs) %>%
select(-c(std.error, statistic, p.value,fit)) %>%
pivot_wider(names_from = term,  values_from = estimate) %>%
nest( Parameters = c(C0,C1,C2,C3,C4,C5)) %>%
mutate( predict = map( Parameters , ~ RB_tibble( coefs = .x , Angle = seq(-180,180,2) ) ) ) %>%
unnest(predict)  %>% unnest(data) %>%
ggplot(aes(x = Angle_pred,  y = Energy_pred , colour = Method)) +
geom_line(size=1.5) +
facet_grid(Oligomer~Method) +
geom_point(aes(x=Angle,  y = Energy),size=2) +
labs(x = "Angle [degrees]", y = "E [kJ/mol]")
ggsave("Figures/Dihedral_Potentials.pdf", width=24, height=18)
ggsave("Figures/Dihedral_Potentials.pdf", width=28, height=18)
